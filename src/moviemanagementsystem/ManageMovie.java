/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package moviemanagementsystem;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author kaarlosasiang
 */
public class ManageMovie extends javax.swing.JFrame {

    private static Movie movie = new Movie();
    private DefaultTableModel model;

    /**
     * Creates new form ManageMovie
     */
    public ManageMovie() {
        initComponents();
        displayTable();
        setActors();
        setDirectors();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        moviesTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        titleField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        yrField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        poField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        genreField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        addMovBtn = new javax.swing.JButton();
        updateMovBtn = new javax.swing.JButton();
        delMovBtn = new javax.swing.JButton();
        actorField = new javax.swing.JComboBox<>();
        directorField = new javax.swing.JComboBox<>();
        backBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(35, 40, 47));

        moviesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Title", "Year Released", "Director", "Actor", "Plot Outline", "Genre"
            }
        ));
        moviesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moviesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(moviesTable);

        jPanel2.setBackground(new java.awt.Color(35, 40, 47));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Movie Title");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Year Released");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Director");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Actor");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Plot Outline");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Genre");

        addMovBtn.setBackground(new java.awt.Color(244, 244, 244));
        addMovBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moviemanagementsystem/images/add-icon.png"))); // NOI18N
        addMovBtn.setText("ADD");
        addMovBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovBtnActionPerformed(evt);
            }
        });

        updateMovBtn.setBackground(new java.awt.Color(244, 244, 244));
        updateMovBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moviemanagementsystem/images/update-icon.png"))); // NOI18N
        updateMovBtn.setText("UPDATE");
        updateMovBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateMovBtnActionPerformed(evt);
            }
        });

        delMovBtn.setBackground(new java.awt.Color(244, 244, 244));
        delMovBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moviemanagementsystem/images/delete-icon.png"))); // NOI18N
        delMovBtn.setText("DELETE");
        delMovBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delMovBtnActionPerformed(evt);
            }
        });

        actorField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Actor" }));
        actorField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actorFieldActionPerformed(evt);
            }
        });

        directorField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Director" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(yrField, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(titleField, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                    .addComponent(directorField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(actorField, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(poField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addMovBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genreField, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(delMovBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateMovBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(titleField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(updateMovBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(actorField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yrField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(poField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delMovBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(directorField)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(genreField, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addMovBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        backBtn.setBackground(new java.awt.Color(132, 176, 39));
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moviemanagementsystem/images/back-icon.png"))); // NOI18N
        backBtn.setText("Back");
        backBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(backBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        MainFrame mf = new MainFrame();
        this.dispose();
        mf.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    private void addMovBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovBtnActionPerformed
        //declare variables to store movie credentials

        String mTitle = titleField.getText();
        String yReleased = yrField.getText();
        String mDirector = directorField.getSelectedItem().toString();
        String mActor = actorField.getSelectedItem().toString();
        String pOutline = poField.getText();
        String mGenre = genreField.getText();

        /*
        if the field is not filled, show message dialog, else add user input to array list
         */
        if (mTitle.equals("") || yReleased.equals("") || mDirector.equals("") || mActor.equals("") || pOutline.equals("") || mGenre.equals("")) {

            JOptionPane.showMessageDialog(null, "Please fill in all fields!");

        } else {

            movie.addMovie(mTitle, yReleased, mDirector, mActor, pOutline, mGenre);
            model.setRowCount(0);
            displayTable();
            JOptionPane.showMessageDialog(null, "Added Successfully!");

            //reset field
            clearField();
        }

    }

    private void displayTable() {
        model = (DefaultTableModel) moviesTable.getModel();
        movie.displayMovie(model);
    }

    private void setActors() {
        Actor actors = new Actor();
        for (var actor : actors.getActors()) {
            System.out.println(actor);
            actorField.addItem(actor);
        }
    }

    private void setDirectors() {
        Director directors = new Director();
        for (var director : directors.getDirectors()) {
            System.out.println(director);
            directorField.addItem(director);
        }
    }

    private void clearField() {
        titleField.setText("");
        yrField.setText("");
        directorField.setSelectedIndex(0);
        actorField.setSelectedIndex(0);
        poField.setText("");
        genreField.setText("");

    }//GEN-LAST:event_addMovBtnActionPerformed

    private void moviesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moviesTableMouseClicked
        model = (DefaultTableModel) moviesTable.getModel();

        //set data to text field when selected
        String tableTitle = model.getValueAt(moviesTable.getSelectedRow(), 1).toString();
        String tableYrReleased = model.getValueAt(moviesTable.getSelectedRow(), 2).toString();
        String tableDirector = model.getValueAt(moviesTable.getSelectedRow(), 3).toString();
        String tableActor = model.getValueAt(moviesTable.getSelectedRow(), 4).toString();
        String tablePlOutline = model.getValueAt(moviesTable.getSelectedRow(), 5).toString();
        String tableGenre = model.getValueAt(moviesTable.getSelectedRow(), 6).toString();

        //set to text field
        titleField.setText(tableTitle);
        yrField.setText(tableYrReleased);
        poField.setText(tablePlOutline);
        directorField.setSelectedItem(tableDirector);
        genreField.setText(tableGenre);
    }//GEN-LAST:event_moviesTableMouseClicked

    private void updateMovBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateMovBtnActionPerformed
        model = (DefaultTableModel) moviesTable.getModel();
        String id = model.getValueAt(moviesTable.getSelectedRow(), 0).toString();

        if (moviesTable.getSelectedRowCount() == 1) {
            int mId = Integer.parseInt(id);
            String mTitle = titleField.getText();
            String yReleased = yrField.getText();
            String mActor = actorField.getSelectedItem().toString();
            String mDirector = directorField.getSelectedItem().toString();
            String pOutline = poField.getText();
            String mGenre = genreField.getText();

            movie.updateMovie(mId, mTitle, yReleased, mDirector, mActor, pOutline, mGenre);
            model.setRowCount(0);
            displayTable();
            JOptionPane.showMessageDialog(null, "Updated Successfully!");

            //reset field
            clearField();
        }
    }//GEN-LAST:event_updateMovBtnActionPerformed

    private void delMovBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delMovBtnActionPerformed

        int dialogResult = JOptionPane.showConfirmDialog(null, "Delete movie?", "Confirmation", JOptionPane.YES_NO_OPTION);
        model = (DefaultTableModel) moviesTable.getModel();
        String id = model.getValueAt(moviesTable.getSelectedRow(), 0).toString();

        if (moviesTable.getSelectedRowCount() == 1) {
            if (dialogResult == JOptionPane.YES_OPTION) {
                int mId = Integer.parseInt(id);

                movie.deleteMovie(mId);
                model.setRowCount(0);
                displayTable();
                JOptionPane.showMessageDialog(null, "Deleted Successfully!");

                //reset field
                clearField();
            } else {
                // User clicked "No" or closed the dialog
                System.out.println("Movie not deleted");
            }

        } else {
            //if table has no data
            if (moviesTable.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Table is empty!");
                //if no row selected
            } else {
                JOptionPane.showMessageDialog(null, "Please select single row to delete!");
            }
        }
    }//GEN-LAST:event_delMovBtnActionPerformed

    private void actorFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actorFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_actorFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageMovie.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageMovie.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageMovie.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageMovie.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageMovie().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> actorField;
    private javax.swing.JButton addMovBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton delMovBtn;
    private javax.swing.JComboBox<String> directorField;
    private javax.swing.JTextField genreField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable moviesTable;
    private javax.swing.JTextField poField;
    private javax.swing.JTextField titleField;
    private javax.swing.JButton updateMovBtn;
    private javax.swing.JTextField yrField;
    // End of variables declaration//GEN-END:variables
}
